# Generated by Django 4.0.2 on 2022-08-12 04:15

import accounts.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('full_name', models.CharField(max_length=20, null=True)),
                ('contact_number', models.CharField(max_length=10, null=True)),
                ('about', models.TextField(null=True)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('date_of_birth', models.DateField(null=True)),
                ('company_name', models.CharField(max_length=30, null=True)),
                ('designation', models.CharField(max_length=50, null=True)),
                ('last_login_time', models.DateTimeField(blank=True, null=True)),
                ('last_logout_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', accounts.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='question_model',
            fields=[
                ('auto_question_id', models.AutoField(primary_key=True, serialize=False)),
                ('question_title', models.CharField(max_length=100)),
                ('question_description', models.TextField()),
                ('technology_name', models.CharField(max_length=20)),
                ('status_name', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('auto_question_id',),
            },
        ),
        migrations.CreateModel(
            name='answer_model',
            fields=[
                ('auto_answer_id', models.AutoField(primary_key=True, serialize=False)),
                ('answer', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('like_and_dislike', models.IntegerField(null=True)),
                ('technology_name', models.CharField(max_length=20)),
                ('status_name', models.CharField(max_length=20)),
                ('questions_answers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.question_model')),
                ('user_answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('auto_answer_id',),
            },
        ),
    ]
